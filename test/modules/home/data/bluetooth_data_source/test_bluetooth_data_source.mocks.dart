// Mocks generated by Mockito 5.3.2 from annotations
// in ergonomic_office_chair_manager/test/modules/home/data/bluetooth_data_source/test_bluetooth_data_source.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:ergonomic_office_chair_manager/core/bluetooth/bluetooth_connector_interface.dart'
    as _i2;
import 'package:ergonomic_office_chair_manager/core/bluetooth/bluetooth_device_model.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BluetoothConnectorInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockBluetoothConnectorInterface extends _i1.Mock
    implements _i2.BluetoothConnectorInterface {
  MockBluetoothConnectorInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<bool> get isConnectedStream => (super.noSuchMethod(
        Invocation.getter(#isConnectedStream),
        returnValue: _i3.Stream<bool>.empty(),
      ) as _i3.Stream<bool>);
  @override
  _i3.Stream<bool> get isConnectedBroadcastStream => (super.noSuchMethod(
        Invocation.getter(#isConnectedBroadcastStream),
        returnValue: _i3.Stream<bool>.empty(),
      ) as _i3.Stream<bool>);
  @override
  _i3.Future<bool> get isEnabled => (super.noSuchMethod(
        Invocation.getter(#isEnabled),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<bool> get isEnabledOverridden => (super.noSuchMethod(
        Invocation.getter(#isEnabledOverridden),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<List<_i4.BluetoothDeviceModel>> getBluetoothDevices() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBluetoothDevices,
          [],
        ),
        returnValue: _i3.Future<List<_i4.BluetoothDeviceModel>>.value(
            <_i4.BluetoothDeviceModel>[]),
      ) as _i3.Future<List<_i4.BluetoothDeviceModel>>);
  @override
  _i3.Future<bool> connect(_i4.BluetoothDeviceModel? bluetoothDevice) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [bluetoothDevice],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Future<bool> disconnect() => (super.noSuchMethod(
        Invocation.method(
          #disconnect,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  void send(String? message) => super.noSuchMethod(
        Invocation.method(
          #send,
          [message],
        ),
        returnValueForMissingStub: null,
      );
}
